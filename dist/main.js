/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/colorMap.ts":
/*!*************************!*\
  !*** ./src/colorMap.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.colorReg = exports.colors = void 0;\r\nexports.colors = {\r\n    \"black\": \"rgba(0,0,0,1)\",\r\n    \"white\": \"rgba(255,255,255,1)\",\r\n    \"red\": \"rgba(255,0,0,1)\",\r\n    \"lime\": \"rgba(0,255,0,1)\",\r\n    \"blue\": \"rgba(0,0,255,1)\",\r\n    \"yellow\": \"rgba(255,255,0,1)\",\r\n    \"cyan\": \"rgba(0,255,255,1)\",\r\n    \"aqua\": \"rgba(0,255,255,1)\",\r\n    \"magenta\": \"rgba(255,0,255,1)\",\r\n    \"fuchsia\": \"rgba(255,0,255,1)\",\r\n    \"silver\": \"rgba(192,192,192,1)\",\r\n    \"gray\": \"rgba(128,128,128,1)\",\r\n    \"maroon\": \"rgba(128,0,0,1)\",\r\n    \"olive\": \"rgba(128,128,0,1)\",\r\n    \"green\": \"rgba(0,128,0,1)\",\r\n    \"purple\": \"rgba(128,0,128,1)\",\r\n    \"teal\": \"rgba(0,128,128,1)\",\r\n    \"navy\": \"rgba(0,0,128,1)\",\r\n    \"darkred\": \"rgba(139,0,0,1)\",\r\n    \"brown\": \"rgba(165,42,42,1)\",\r\n    \"firebrick\": \"rgba(178,34,34,1)\",\r\n    \"crimson\": \"rgba(220,20,60,1)\",\r\n    \"tomato\": \"rgba(255,99,71,1)\",\r\n    \"coral\": \"rgba(255,127,80,1)\",\r\n    \"indianred\": \"rgba(205,92,92,1)\",\r\n    \"lightcoral\": \"rgba(240,128,128,1)\",\r\n    \"darksalmon\": \"rgba(233,150,122,1)\",\r\n    \"salmon\": \"rgba(250,128,114,1)\",\r\n    \"lightsalmon\": \"rgba(255,160,122,1)\",\r\n    \"orangered\": \"rgba(255,69,0,1)\",\r\n    \"darkorange\": \"rgba(255,140,0,1)\",\r\n    \"orange\": \"rgba(255,165,0,1)\",\r\n    \"gold\": \"rgba(255,215,0,1)\",\r\n    \"darkgoldenrod\": \"rgba(184,134,11,1)\",\r\n    \"goldenrod\": \"rgba(218,165,32,1)\",\r\n    \"palegoldenrod\": \"rgba(238,232,170,1)\",\r\n    \"darkkhaki\": \"rgba(189,183,107,1)\",\r\n    \"khaki\": \"rgba(240,230,140,1)\",\r\n    \"yellowgreen\": \"rgba(154,205,50,1)\",\r\n    \"darkolivegreen\": \"rgba(85,107,47,1)\",\r\n    \"olivedrab\": \"rgba(107,142,35,1)\",\r\n    \"lawngreen\": \"rgba(124,252,0,1)\",\r\n    \"chartreuse\": \"rgba(127,255,0,1)\",\r\n    \"greenyellow\": \"rgba(173,255,47,1)\",\r\n    \"darkgreen\": \"rgba(0,100,0,1)\",\r\n    \"forestgreen\": \"rgba(34,139,34,1)\",\r\n    \"limegreen\": \"rgba(50,205,50,1)\",\r\n    \"lightgreen\": \"rgba(144,238,144,1)\",\r\n    \"palegreen\": \"rgba(152,251,152,1)\",\r\n    \"darkseagreen\": \"rgba(143,188,143,1)\",\r\n    \"mediumspringgreen\": \"rgba(0,250,154,1)\",\r\n    \"springgreen\": \"rgba(0,255,127,1)\",\r\n    \"seagreen\": \"rgba(46,139,87,1)\",\r\n    \"mediumaquamarine\": \"rgba(102,205,170,1)\",\r\n    \"mediumseagreen\": \"rgba(60,179,113,1)\",\r\n    \"lightseagreen\": \"rgba(32,178,170,1)\",\r\n    \"darkslategray\": \"rgba(47,79,79,1)\",\r\n    \"darkcyan\": \"rgba(0,139,139,1)\",\r\n    \"lightcyan\": \"rgba(224,255,255,1)\",\r\n    \"darkturquoise\": \"rgba(0,206,209,1)\",\r\n    \"turquoise\": \"rgba(64,224,208,1)\",\r\n    \"mediumturquoise\": \"rgba(72,209,204,1)\",\r\n    \"paleturquoise\": \"rgba(175,238,238,1)\",\r\n    \"aquamarine\": \"rgba(127,255,212,1)\",\r\n    \"powderblue\": \"rgba(176,224,230,1)\",\r\n    \"cadetblue\": \"rgba(95,158,160,1)\",\r\n    \"steelblue\": \"rgba(70,130,180,1)\",\r\n    \"cornflowerblue\": \"rgba(100,149,237,1)\",\r\n    \"deepskyblue\": \"rgba(0,191,255,1)\",\r\n    \"dodgerblue\": \"rgba(30,144,255,1)\",\r\n    \"lightblue\": \"rgba(173,216,230,1)\",\r\n    \"skyblue\": \"rgba(135,206,235,1)\",\r\n    \"lightskyblue\": \"rgba(135,206,250,1)\",\r\n    \"midnightblue\": \"rgba(25,25,112,1)\",\r\n    \"darkblue\": \"rgba(0,0,139,1)\",\r\n    \"mediumblue\": \"rgba(0,0,205,1)\",\r\n    \"royalblue\": \"rgba(65,105,225,1)\",\r\n    \"blueviolet\": \"rgba(138,43,226,1)\",\r\n    \"indigo\": \"rgba(75,0,130,1)\",\r\n    \"darkslateblue\": \"rgba(72,61,139,1)\",\r\n    \"slateblue\": \"rgba(106,90,205,1)\",\r\n    \"mediumslateblue\": \"rgba(123,104,238,1)\",\r\n    \"mediumpurple\": \"rgba(147,112,219,1)\",\r\n    \"darkmagenta\": \"rgba(139,0,139,1)\",\r\n    \"darkviolet\": \"rgba(148,0,211,1)\",\r\n    \"darkorchid\": \"rgba(153,50,204,1)\",\r\n    \"mediumorchid\": \"rgba(186,85,211,1)\",\r\n    \"thistle\": \"rgba(216,191,216,1)\",\r\n    \"plum\": \"rgba(221,160,221,1)\",\r\n    \"violet\": \"rgba(238,130,238,1)\",\r\n    \"orchid\": \"rgba(218,112,214,1)\",\r\n    \"mediumvioletred\": \"rgba(199,21,133,1)\",\r\n    \"palevioletred\": \"rgba(219,112,147,1)\",\r\n    \"deeppink\": \"rgba(255,20,147,1)\",\r\n    \"hotpink\": \"rgba(255,105,180,1)\",\r\n    \"lightpink\": \"rgba(255,182,193,1)\",\r\n    \"pink\": \"rgba(255,192,203,1)\",\r\n    \"antiquewhite\": \"rgba(250,235,215,1)\",\r\n    \"beige\": \"rgba(245,245,220,1)\",\r\n    \"bisque\": \"rgba(255,228,196,1)\",\r\n    \"blanchedalmond\": \"rgba(255,235,205,1)\",\r\n    \"wheat\": \"rgba(245,222,179,1)\",\r\n    \"cornsilk\": \"rgba(255,248,220,1)\",\r\n    \"lemonchiffon\": \"rgba(255,250,205,1)\",\r\n    \"lightgoldenrodyellow\": \"rgba(250,250,210,1)\",\r\n    \"lightyellow\": \"rgba(255,255,224,1)\",\r\n    \"saddlebrown\": \"rgba(139,69,19,1)\",\r\n    \"sienna\": \"rgba(160,82,45,1)\",\r\n    \"chocolate\": \"rgba(210,105,30,1)\",\r\n    \"peru\": \"rgba(205,133,63,1)\",\r\n    \"sandybrown\": \"rgba(244,164,96,1)\",\r\n    \"burlywood\": \"rgba(222,184,135,1)\",\r\n    \"tan\": \"rgba(210,180,140,1)\",\r\n    \"rosybrown\": \"rgba(188,143,143,1)\",\r\n    \"moccasin\": \"rgba(255,228,181,1)\",\r\n    \"navajowhite\": \"rgba(255,222,173,1)\",\r\n    \"peachpuff\": \"rgba(255,218,185,1)\",\r\n    \"mistyrose\": \"rgba(255,228,225,1)\",\r\n    \"lavenderblush\": \"rgba(255,240,245,1)\",\r\n    \"linen\": \"rgba(250,240,230,1)\",\r\n    \"oldlace\": \"rgba(253,245,230,1)\",\r\n    \"papayawhip\": \"rgba(255,239,213,1)\",\r\n    \"seashell\": \"rgba(255,245,238,1)\",\r\n    \"mintcream\": \"rgba(245,255,250,1)\",\r\n    \"slategray\": \"rgba(112,128,144,1)\",\r\n    \"lightslategray\": \"rgba(119,136,153,1)\",\r\n    \"lightsteelblue\": \"rgba(176,196,222,1)\",\r\n    \"lavender\": \"rgba(230,230,250,1)\",\r\n    \"floralwhite\": \"rgba(255,250,240,1)\",\r\n    \"aliceblue\": \"rgba(240,248,255,1)\",\r\n    \"ghostwhite\": \"rgba(248,248,255,1)\",\r\n    \"honeydew\": \"rgba(240,255,240,1)\",\r\n    \"ivory\": \"rgba(255,255,240,1)\",\r\n    \"azure\": \"rgba(240,255,255,1)\",\r\n    \"snow\": \"rgba(255,250,250,1)\",\r\n    \"dimgray\": \"rgba(105,105,105,1)\",\r\n    \"dimgrey\": \"rgba(105,105,105,1)\",\r\n    \"grey\": \"rgba(128,128,128,1)\",\r\n    \"darkgray\": \"rgba(169,169,169,1)\",\r\n    \"darkgrey\": \"rgba(169,169,169,1)\",\r\n    \"lightgray\": \"rgba(211,211,211,1)\",\r\n    \"lightgrey\": \"rgba(211,211,211,1)\",\r\n    \"gainsboro\": \"rgba(220,220,220,1)\",\r\n    \"whitesmoke\": \"rgba(245,245,245,1)\"\r\n};\r\nexports.colorReg = new RegExp('rgba?\\\\(.*?\\\\)\\|#[0-9a-fA-F]{8}\\|#[0-9a-fA-F]{6}\\|#[0-9a-fA-F]{3}\\|black\\|white\\|red\\|lime\\|blue\\|yellow\\|cyan\\|aqua\\|magenta\\|fuchsia\\|silver\\|gray\\|maroon\\|olive\\|green\\|purple\\|teal\\|navy\\|darkred\\|brown\\|firebrick\\|crimson\\|tomato\\|coral\\|indianred\\|lightcoral\\|darksalmon\\|salmon\\|lightsalmon\\|orangered\\|darkorange\\|orange\\|gold\\|darkgoldenrod\\|goldenrod\\|palegoldenrod\\|darkkhaki\\|khaki\\|yellowgreen\\|darkolivegree\\| olivedrab\\|lawngreen\\|chartreuse\\|greenyellow\\|darkgreen\\|forestgreen\\|limegreen\\|lightgreen\\|palegreen\\|darkseagreen\\|mediumspringg\\|springgreen\\|seagreen\\|mediumaquamar\\|mediumseagree\\|lightseagreen\\|darkslategray\\|darkcyan\\|lightcyan\\|darkturquoise\\|turquoise\\|mediumturquoi\\|paleturquoise\\|aquamarine\\|powderblue\\|cadetblue\\|steelblue\\|cornflowerblu\\|deepskyblue\\|dodgerblue\\|lightblue\\|skyblue\\|lightskyblue\\|midnightblue\\|darkblue\\|mediumblue\\|royalblue\\|blueviolet\\|indigo\\|darkslateblue\\|slateblue\\|mediumslatebl\\|mediumpurple\\|darkmagenta\\|darkviolet\\|darkorchid\\|mediumorchid\\|thistle\\|plum\\|violet\\|orchid\\|mediumvioletr\\|palevioletred\\|deeppink\\|hotpink\\|lightpink\\|pink\\|antiquewhite\\|beige\\|bisque\\|blanchedalmon\\|wheat\\|cornsilk\\|lemonchiffon\\|lightgoldenro\\|lightyellow\\|saddlebrown\\|sienna\\|chocolate\\|peru\\|sandybrown\\|burlywood\\|tan\\|rosybrown\\|moccasin\\|navajowhite\\|peachpuff\\|mistyrose\\|lavenderblush\\|linen\\|oldlace\\|papayawhip\\|seashell\\|mintcream\\|slategray\\|lightslategra\\|lightsteelblu\\|lavender\\|floralwhite\\|aliceblue\\|ghostwhite\\|honeydew\\|ivory\\|azure\\|snow\\|dimgray\\|dimgrey\\|grey\\|darkgray\\|darkgrey\\|lightgray\\|lightgrey\\|gainsboro\\|whitesmoke', 'g');\r\n\n\n//# sourceURL=webpack:///./src/colorMap.ts?");

/***/ }),

/***/ "./src/createKeyframes.ts":
/*!********************************!*\
  !*** ./src/createKeyframes.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.colorRGBLize = exports.findColorKeys = exports.findFnKeys = exports.findSpcKeys = exports.createKeyframes = void 0;\r\nvar colorMap_1 = __webpack_require__(/*! ./colorMap */ \"./src/colorMap.ts\");\r\nvar createKeyframes = function (animation, length, option) {\r\n    var result = new Array(length); //최종적으로 반환될 애니메이션 키프레임\r\n    var animationKeys = Object.keys(animation); //키프레임 목록\r\n    var _a = option === undefined\r\n        ? (0, exports.findSpcKeys)(animation, option)\r\n        : option, fnKeys = _a.fnKeys, colorKeys = _a.colorKeys;\r\n    //option에 함수밸류를 가진 속성을 명시하지 않으면, 자동으로 찾습니다.\r\n    Object.keys(fnKeys).forEach(function (item) {\r\n        fnKeys[item].forEach(function (prop) {\r\n            animation[item][prop] = animation[item][prop]();\r\n            // const fn:Function = animation[item][prop] as Function;\r\n        });\r\n    });\r\n    //함수 실행행\r\n    Object.keys(colorKeys).forEach(function (item) {\r\n        colorKeys[item].forEach(function (prop) {\r\n            animation[item][prop] = (0, exports.colorRGBLize)(animation[item][prop]);\r\n        });\r\n    });\r\n    //색깔 변경\r\n    console.log(animation);\r\n    return [];\r\n};\r\nexports.createKeyframes = createKeyframes;\r\nvar findSpcKeys = function (animation, _a) {\r\n    var fnKeys = _a.fnKeys, colorKeys = _a.colorKeys;\r\n    //색깔 속성을 가진 키프레임과 함수 속성을 가진 키프레임을 찾아냅니다.\r\n    var result = Object.keys(animation).reduce(function (acc, item) {\r\n        var thisAnimation = animation[item];\r\n        var fnKeys = (0, exports.findFnKeys)(thisAnimation);\r\n        var colorKeys = (0, exports.findColorKeys)(thisAnimation);\r\n        if (fnKeys.length > 0)\r\n            acc.fnKeys[item] = fnKeys;\r\n        if (colorKeys.length > 0)\r\n            acc.colorKeys[item] = colorKeys;\r\n        return acc;\r\n    }, { fnKeys: {}, colorKeys: {} });\r\n    return result;\r\n};\r\nexports.findSpcKeys = findSpcKeys;\r\nvar findFnKeys = function (animationValue) {\r\n    //함수 속성을 가진 키프레임을 반환합니다.\r\n    return Object.keys(animationValue).filter(function ($item) {\r\n        return typeof animationValue[$item] === 'function';\r\n    });\r\n};\r\nexports.findFnKeys = findFnKeys;\r\nvar findColorKeys = function (animationValue) {\r\n    //색깔 속성을 가진 키프레임을 반환합니다.\r\n    return Object.keys(animationValue).filter(function ($item) {\r\n        return typeof animationValue[$item] === 'string' && animationValue[$item].match(colorMap_1.colorReg).length > 0;\r\n    });\r\n};\r\nexports.findColorKeys = findColorKeys;\r\nvar colorRGBLize = function ($color) {\r\n    var str = $color.replace(colorMap_1.colorReg, function (match, p1) {\r\n        if (match.substring(0, 1) === '#') {\r\n            var color = '';\r\n            switch (match.length) {\r\n                case 4:\r\n                    var cs = match.split('').splice(1, 4);\r\n                    color = (cs.reduce(function (acc, item) {\r\n                        acc += (item + item);\r\n                        return acc;\r\n                    }, '')) + 'ff';\r\n                    break;\r\n                case 7:\r\n                    color = (match.replace('#', '')) + 'ff';\r\n                    break;\r\n                case 9:\r\n                    color = (match.replace('#', ''));\r\n                    break;\r\n                default:\r\n                    color = 'ffffffff';\r\n            }\r\n            var rgba = [parseInt(color.substring(0, 2), 16), parseInt(color.substring(2, 4), 16), parseInt(color.substring(4, 6), 16), parseInt(color.substring(6, 8), 16)];\r\n            return 'rgba(' + rgba.join(',') + ')';\r\n        }\r\n        else if (match.substring(0, 3) === 'rgb') {\r\n            if (match.substring(3, 4) === 'a')\r\n                return match;\r\n            else\r\n                return match.replace(/\\((.*?)\\)/, '($1,1)').replace('rgb', 'rgba');\r\n        }\r\n        else {\r\n            return colorMap_1.colors[$color] === undefined ? 'rgba(255,255,255,0.5)' : colorMap_1.colors[$color];\r\n        }\r\n    });\r\n    return str;\r\n};\r\nexports.colorRGBLize = colorRGBLize;\r\nvar animation = {\r\n    '0': {\r\n        opacity: 0,\r\n        transform: function () { return \"matrix(\" + -50 + \"%, -50%)\"; },\r\n        color: '#fff'\r\n    },\r\n    '100': {\r\n        opacity: 1,\r\n        transform: function () { return \"matrix(\" + 0 + \"%, 0%)\"; },\r\n        color: '#111'\r\n    }\r\n};\r\n(0, exports.createKeyframes)(animation, 100, {\r\n    fnKeys: {\r\n        '0': ['transform']\r\n    }\r\n});\r\n// .match(/[^)^\\s]*\\(.*?\\)/g)\r\n\n\n//# sourceURL=webpack:///./src/createKeyframes.ts?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./src/createKeyframes.ts");
/******/ 	
/******/ })()
;